import{k as O,l as q,r as y,m as v,f as A,g as c,q as W,n as j,h as b,T as o,s as D,j as p,p as H,i as x}from"./index-CMVsiJL9.js";import M from"./serializedInventoryService-3dz-cBVH.js";const $=O("ariza",()=>{const d=q(),i=y([]),m=y([]),S=y([]),l=y(!1),u=y(null),k=v(()=>{if(d.isAdmin)return i.value;const e=d.getAuthorizedDepot;return e?i.value.filter(t=>t.senderWarehouseId===e):[]}),P=v(()=>m.value),E=v(()=>S.value),T=v(()=>e=>k.value.filter(t=>t.status===e)),R=v(()=>e=>k.value.filter(t=>t.projectId===e));async function h(){l.value=!0,u.value=null;try{const e=A(c,"faultyProducts"),t=W(e,j("createdAt","desc")),a=await b(t),n=[];a.forEach(s=>{const r=s.data();n.push({...r,id:s.id,sendDate:r.sendDate instanceof o?r.sendDate.toDate():r.sendDate,createdAt:r.createdAt instanceof o?r.createdAt.toDate():r.createdAt,updatedAt:r.updatedAt instanceof o?r.updatedAt.toDate():r.updatedAt,returnedAt:r.returnedAt instanceof o?r.returnedAt.toDate():r.returnedAt})}),i.value=n}catch(e){console.error("Error fetching faulty products:",e),u.value="Arızalı ürünler yüklenirken bir hata oluştu"}finally{l.value=!1}}async function g(){l.value=!0,u.value=null;try{const e=A(c,"serviceCenters"),t=await b(e),a=[];t.forEach(n=>{const s=n.data();a.push({...s,id:n.id,createdAt:s.createdAt instanceof o?s.createdAt.toDate():s.createdAt})}),m.value=a}catch(e){console.error("Error fetching service centers:",e),u.value="Servis merkezleri yüklenirken bir hata oluştu"}finally{l.value=!1}}async function w(){l.value=!0,u.value=null;try{const e=A(c,"faultTypes"),t=await b(e),a=[];t.forEach(n=>{const s=n.data();a.push({...s,id:n.id,createdAt:s.createdAt instanceof o?s.createdAt.toDate():s.createdAt})}),S.value=a}catch(e){console.error("Error fetching fault types:",e),u.value="Arıza tipleri yüklenirken bir hata oluştu"}finally{l.value=!1}}async function I(e){var t;l.value=!0,u.value=null;try{if(!e.serialNumber||!e.senderWarehouseId)return console.error("Arızalı ürün kaydında seri numarası veya depo bilgisi eksik"),u.value="Seri numarası ve gönderen depo gereklidir",!1;console.log("STORE: Arıza kaydı oluşturulmadan önce seri numarası kontrolü yapılıyor",e.serialNumber);try{const r=await M.checkSerialNumberInWarehouse(e.serialNumber,e.senderWarehouseId);if(console.log("STORE: Seri numarası kontrol sonucu:",r),!r||r!=null&&r.notInSystem){const f=(r==null?void 0:r.message)||`"${e.serialNumber}" seri numarası sistemde kayıtlı değil!`;return console.error("STORE HATA: Arızalı ürün kaydı reddedildi - Seri numarası sistemde yok:",f),u.value=f,!1}if(!r.exists){const f=r.message||"Seri numaralı ürün seçilen depoda bulunmuyor.";return console.error("STORE HATA: Arızalı ürün kaydı reddedildi - Seri numarası yanlış depoda:",f),u.value=f,!1}console.log("STORE: Seri numarası kontrolü başarılı, arızalı ürün kaydı oluşturuluyor...")}catch(r){return console.error("STORE HATA: Seri numarası doğrulama hatası:",r),u.value="Seri numarası doğrulama sırasında bir hata oluştu: "+((r==null?void 0:r.message)||"Bilinmeyen hata"),!1}const a=A(c,"faultyProducts"),n={...e,createdBy:((t=d.userInfo)==null?void 0:t.id)||"",createdAt:o.now(),status:"Gönderildi"},s=await D(p(a),n);return await h(),!0}catch(a){return console.error("Error adding faulty product:",a),u.value="Arızalı ürün kaydı eklenirken bir hata oluştu",!1}finally{l.value=!1}}async function z(e,t){var a;l.value=!0,u.value=null;try{const n=p(c,"faultyProducts",e),s={...t,updatedBy:((a=d.userInfo)==null?void 0:a.id)||"",updatedAt:o.now()};return await H(n,s),await h(),!0}catch(n){return console.error("Error updating faulty product:",n),u.value="Arızalı ürün kaydı güncellenirken bir hata oluştu",!1}finally{l.value=!1}}async function B(e){l.value=!0,u.value=null;try{const t=p(c,"faultyProducts",e);return await x(t),i.value=i.value.filter(a=>a.id!==e),!0}catch(t){return console.error("Error deleting faulty product:",t),u.value="Arızalı ürün kaydı silinirken bir hata oluştu",!1}finally{l.value=!1}}async function F(e,t,a){l.value=!0,u.value=null;try{const n={status:t};return a&&(t==="İade Edildi"||t==="İade Alındı"?(n.returnNotes=a,n.returnedAt=o.now()):n.repairNotes=a),await z(e,n)}catch(n){return console.error("Error updating status:",n),u.value="Durum güncellenirken bir hata oluştu",!1}finally{l.value=!1}}async function N(e){var t;l.value=!0,u.value=null;try{const a=A(c,"serviceCenters"),n={...e,createdBy:((t=d.userInfo)==null?void 0:t.id)||"",createdAt:o.now()};return await D(p(a),n),await g(),!0}catch(a){return console.error("Error adding service center:",a),u.value="Servis merkezi eklenirken bir hata oluştu",!1}finally{l.value=!1}}async function C(){try{return await Promise.all([h(),g(),w()]),!0}catch(e){return console.error("Arıza store verilerini başlatırken hata:",e),!1}}return{faultyProducts:i,serviceCenters:m,faultTypes:S,loading:l,error:u,getFaultyProducts:k,getServiceCenters:P,getFaultTypes:E,getProductsByStatus:T,getProductsByProject:R,fetchFaultyProducts:h,fetchServiceCenters:g,fetchFaultTypes:w,addFaultyProduct:I,updateFaultyProduct:z,deleteFaultyProduct:B,updateStatus:F,addServiceCenter:N,initializeStore:C}});export{$ as u};
